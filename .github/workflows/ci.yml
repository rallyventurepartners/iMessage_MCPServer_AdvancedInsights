name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-dev.txt
    
    - name: Format check with Black
      run: black --check --line-length=100 src/ tests/
    
    - name: Lint with Ruff
      run: ruff check src/ tests/
    
    - name: Type check with mypy
      run: mypy src/ --ignore-missing-imports
    
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements-dev.txt
    
    - name: Run tests with coverage
      env:
        MCP_DB_PATH: /tmp/test_chat.db
        PYTHONPATH: ${{ github.workspace }}/src
      run: |
        # Create a minimal test database
        touch /tmp/test_chat.db
        pytest tests/ -v --cov=src/imessage_mcp_server --cov-report=term-missing --cov-report=xml || true
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install Bandit
      run: pip install bandit
    
    - name: Run security scan
      run: bandit -r src/ -ll -i -x tests/
    
  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check markdown files
      uses: DavidAnson/markdownlint-cli2-action@v15
      with:
        globs: |
          README.md
          SETUP_GUIDE.md
          docs/*.md
      continue-on-error: true
    
    - name: Check for broken links
      uses: lycheeverse/lychee-action@v1
      with:
        args: --verbose --no-progress './README.md' './docs/*.md' --accept 200,204,301,302
        fail: false