[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "imessage-advanced-insights"
version = "1.0.0"
description = "Privacy-first MCP server for iMessage conversation analysis with Claude"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "David Jelinek", email = "david@rvp.io"},
    {name = "Rally Venture Partners"},
]
maintainers = [
    {name = "David Jelinek", email = "david@rvp.io"},
    {name = "Rally Venture Partners"},
]
keywords = [
    "mcp",
    "claude",
    "imessage",
    "conversation-analysis",
    "privacy",
    "data-science",
    "nlp"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS :: MacOS X",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Communications :: Chat",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    "mcp>=0.1.0",
    "pydantic>=2.0.0",
    "aiofiles>=23.0.0",
    "numpy>=1.24.0",
    "scipy>=1.10.0",
    "scikit-learn>=1.3.0",
    "pandas>=2.0.0",
    "nltk>=3.8.0",
    "textblob>=0.17.0",
    "networkx>=3.0",
    "python-dateutil>=2.8.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
]

[project.optional-dependencies]
ml = [
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.0",
    "onnxruntime>=1.16.0",
    "hdbscan>=0.8.0",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=24.0.0",
    "ruff>=0.2.0",
    "mypy>=1.8.0",
    "pre-commit>=3.5.0",
    "pydocstyle>=6.3.0",
    "bandit>=1.7.0",
]

[project.scripts]
imessage-insights = "imessage_mcp_server.main:main"

[project.urls]
Homepage = "https://github.com/rallyventurepartners/iMessage_MCPServer_AdvancedInsights"
Documentation = "https://github.com/rallyventurepartners/iMessage_MCPServer_AdvancedInsights/tree/main/docs"
Repository = "https://github.com/rallyventurepartners/iMessage_MCPServer_AdvancedInsights"
Issues = "https://github.com/rallyventurepartners/iMessage_MCPServer_AdvancedInsights/issues"

[tool.setuptools.packages.find]
where = ["src"]
include = ["imessage_mcp_server*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  archive
  | test_venv
  | venv
  | \.venv
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip_gitignore = true
extend_skip = ["archive/", "test_venv/", "venv/", ".venv/"]

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "ARG",  # flake8-unused-arguments
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    "archive/",
    "test_venv/",
    "venv/",
    ".venv/",
    "__pycache__/",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_optional = true
strict_equality = true
ignore_missing_imports = true
exclude = [
    "archive/",
    "test_venv/",
    "venv/",
    ".venv/",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/imessage_mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/archive/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]